>>> 直接用x, y, z记录a, b, c是不行的;

>>> 解决方法1: 
      把三个数放进一个vector, 然后sort这个vector;
      
    解决方法2: neal_wu
      两两交换: 其实是比较三次: a&b, a&c, b&c; 
      但是写出来是这样的: 
      if (a > b) swap(a, b);
      if (b > c) swap(b, c);
      if (a > b) swap(a, b);
      
>>>  一开始还理解错了: x<y<z,  移动x或者z到k, x<k<z, k!=y;
>> 三个数字的大小没有关系, 是可以交错的, i.e. 大的数字在小的前面;
>> 如果两个数字相距2，另一个数移动一次放在中间就行了: 所以总共只需要移动一次就行了

另:  
1. java中sort array的方法是:  Array.sort(arr), 静态方法
2. java 返回一个匿名数组: 还是返回对象: new int[]{...};

>>>>>>
 实际上搞混了为什么要sort: 是为了看最大数和最小数之间的距离从而确定最多可以一步一步地移动多少次,
 而不是说这三个数不管怎么移动都一定要保持从小到大的顺序: 实际上是可以颠倒大小顺序的;
