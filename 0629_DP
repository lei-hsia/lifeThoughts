https://www.zhihu.com/question/23995189

换钞票: 
1. Greedy: 尽量减小要凑出来的当前的面值; 
2. DP: subproblem: 
      f(n)只和f(n-1), f(n-5), f(n-11)的值相关;
      只关心f(w)的值，不关心是怎么凑出w的
      
    和brute force的区别: brute force枚举了“使用的coin”，但是这是冗余信息，我们只要答案，
    根本不关心答案是怎么凑出来的；
    
    能这样，取决于问题的性质：求出f(n), 只需要知道更小的f(c), 求f(c)称为求f(n)的子问题
    
无后效性:
  一旦f(n)确定，“我们如何凑出f(n)”就再也用不着了。
　要求出f(15)，只需要知道f(14),f(10),f(4)的值，而f(14),f(10),f(4)是如何算出来的，对之后的问题没有影响。
　“未来与过去无关”，这就是无后效性。
 
最优子结构:
  回顾我们对f(n)的定义：我们记“凑出n所需的最少钞票数量”为f(n).
　f(n)的定义就已经蕴含了“最优”。利用w=14,10,4的最优解，我们即可算出w=15的最优解。
　大问题的最优解可以由小问题的最优解推出，这个性质叫做“最优子结构性质”。
 
 
 
　　引入这两个概念之后，我们如何判断一个问题能否使用DP解决呢？
　　能将大问题拆成几个小问题，且满足无后效性、最优子结构性质
   
   对DP原理的一点讨论:
   DP是枚举有希望成为答案的解。这个空间比暴力的小得多。
　　也就是说：DP自带剪枝。
  
  
  f(x) = max_(p<x, ap<ax) {f{p)} + 1; 
　至此解决问题。两层for循环，复杂度 O(n^2). 真正写出了数学公式之后，dp很好写了,
  很明显x要循环一层，p是在1-x范围内循环的index，
  
  dp的f(x)表示什么: 要求什么就直接表示什么
  
  
